name: Build exe from py

on:
  pull_request:
    types: [labeled]
    branches:
        - main
defaults:
  run:
    shell: powershell

jobs:
    Dump-github-context:
        runs-on: windows-latest
        if: github.event.action == 'labeled' && github.event.label.name == 'exe-creation'
        steps:
            - name: Dump github context
              run: echo '${{ toJson(github.event) }}'

    Repo-checkout:
        runs-on: windows-latest
        if: github.event.action == 'labeled' && github.event.label.name == 'exe-creation'
        steps:
            - name: Checkout
              uses: actions/checkout@v4

    Python-and-pyinstaller-setup:
        needs: [Repo-checkout]
        runs-on: windows-latest
        if: github.event.action == 'labeled' && github.event.label.name == 'exe-creation'
        steps:
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version: '3.10.11'

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install pyinstaller

    Build-exe:
        needs: [Python-and-pyinstaller-setup]
        runs-on: windows-latest
        if: github.event.action == 'labeled' && github.event.label.name == 'exe-creation'
        steps:
            - name: Build exe
              run: |
                cd scripts
                python -m PyInstaller writeOnFile.py --onefile
              continue-on-error: true

    Build-error-handling:
        needs: [Build-exe]
        runs-on: windows-latest
        if: github.event.action == 'labeled' && github.event.label.name == 'exe-creation'
        steps:
            - name: Close pull request if creation failed
              if: ${{failure()}}
              env:
                GH_TOKEN: ${{secrets.MY_TOKEN}}
                OWNER: ${{ github.event.repository.owner.login }}
                REPO: ${{ github.event.repository.name }}
                PULL_REQ_ID: ${{github.event.pull_request.id}}
                PULL_NUMBER: ${{github.event.pull_request.number}}
                PULL_REQ_TITLE: ${{github.event.pull_request.title}}
                EVENT_AUTHOR: ${{github.event.pull_request.user.login}}
              run: |
                $headers = @{
                    "Authorization" = "Bearer $env:GH_TOKEN"
                }
                $uri = "https://api.github.com/repos/$env:OWNER/$env:REPO/pulls/$env:PULL_NUMBER"
                $body = @{
                    title = $PULL_REQ_TITLE
                    body = " @$env:EVENT_AUTHOR Exe creation failed
                            PULL REQUEST INFO:
                                ID: $env:PULL_REQ_ID
                                TITLE: $env:PULL_REQ_TITLE"
                    state = "closed"
                    labels = @("invalid")
                } | ConvertTo-Json
                Invoke-WebRequest -Uri $uri -Method Post -Headers $headers -Body $body

    Upload-artifact:
        needs: [Build-error-handling, Build-exe]
        runs-on: windows-latest
        if: github.event.action == 'labeled' && github.event.label.name == 'exe-creation'
        steps:
            - name: Upload artifact
              if: ${{success()}}
              uses: actions/upload-artifact@v4
              with:
                name: exe-art
                path: ${{github.workspace}}/scripts/writeOnFile.exe
                retention-days: 1